body {
  background-color: black;
  color: white;
}

.App {
  text-align: center;
}

.App-logo {
  height: 5vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin inf
    ite 20s linear;
  }
}

.App-header {
  /* background-color: #61dafb; */
  min-height: 5vmin;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 1vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.content {
  padding: 5px;
  grid-template-columns: repeat(4, 1fr);
  /* grid-auto-rows: 500px; */
  border: 1px dashed #bcbcbc;
}

.bbsImgDiv {
  object-fit: contain;
  border: inherit;
}

.bbsInfoDiv {
  padding: 5px;
  border: inherit;
}

.imgItem {
  text-align: left;
  float: left;
  border: inherit;
}

.bbsImage {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

/* Styling for loading and no more images messages */
.App .content p { /* Target p tags within the content div for loading/no more messages */
  text-align: center;
  padding: 20px;
  font-style: italic;
  color: #666;
}

/* STYLES FOR REACT-PHOTO-GALLERY */
.image-gallery-container {
  width: 90%; /* Or your preferred width */
  max-width: 1200px; /* Example max width */
  margin: 20px auto; /* Centering and some vertical margin */
  padding: 0; /* Reset padding if any was there */
  /* Ensure no display: grid or display: flex here that would conflict */
}

/*
  The .gallery-item and .gallery-image classes are no longer needed here,
  as react-photo-gallery handles its own internal structure and styling.
  Any custom styling for images themselves, if needed, would typically be
  done via props passed to react-photo-gallery or by targeting its generated classes
  (though the latter is less robust to library updates).
*/
/* END OF STYLES FOR REACT-PHOTO-GALLERY */